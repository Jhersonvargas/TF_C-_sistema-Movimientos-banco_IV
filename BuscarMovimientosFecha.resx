<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnImprimir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>